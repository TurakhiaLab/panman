name: ci
on:
  push:
    branches:
      - base
      - main
      - capnp        

permissions:
  contents: write

jobs:
  Run-panmanUtils:
    name: Deploy Job on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-13]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ github.ref }}
          path: .cache

      - name: Install mkdocs
        if: runner.os == 'Linux'
        run: |
          pip install mkdocs-material
          pip install "mkdocs-material[imaging]"
          mkdocs gh-deploy --force

      - name: Linux-specific steps
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y gcc-10 g++-10
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
          sudo update-alternatives --set gcc /usr/bin/gcc-10
          chmod +x install/installationUbuntu.sh
          sudo ./install/installationUbuntu.sh

      # - name: macOS-specific steps
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew update
      #     brew install cairo pango gdk-pixbuf libffi
      #     chmod +x install/installationMacOS.sh
      #     ./install/installationMacOS.sh

      - name: Install Conda
        if: runner.os == 'macOS'
        run: |
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
          chmod +x Miniconda3-latest-MacOSX-x86_64.sh
          ./Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda
          echo "::append-path::$HOME/miniconda/bin" >> $GITHUB_PATH

      - name: Setup Conda Environment and Install PanMan
        if: runner.os == 'macOS'
        run: |
          conda init
          conda create -n panman-env -y
          conda activate panman-env
          conda config --add channels defaults
          conda config --add channels bioconda
          conda config --add channels conda-forge
          conda install bioconda::panman -y

      - name: test-ubuntu
        if: runner.os == 'Linux'
        run: |
          cd build
          ./panmanUtils --help

      - name: test-macOS
        if: runner.os == 'macOS'
        run: |
          cd build
          ./panmanUtils --help
