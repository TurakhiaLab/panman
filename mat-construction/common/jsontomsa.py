import json
from read_json import *

# Step1: Match aligned sequences generated by pangraph and vg/mafft

# Extracting aligned sequences in pangraph
f = open("/home/AD.UCSD.EDU/swalia/data/ecoli/pangraph/ecoli_10.json","r")
data = json.load(f)
f.close()
blockSeq, blockSub, blockSubIdx, blockDel, blockGap, blockIns = getMutations( data )
paths =  getPaths( data )
pangraph_seq = dict()


for each_seq in paths:
    pangraph_seq[each_seq] = dict()
    for each_block in paths[each_seq]:
        pangraph_seq[each_seq][each_block] = blockSeq[each_block].upper()

# block = "BILKOQUWTK"
# seq = "NZ_CP011342"
# previous = pangraph_seq[seq][block] 

for each_block in blockSub:
    for each_seq in blockSub[each_block]:
        for each_subs in blockSub[each_block][each_seq]:
            # print(pangraph_seq[each_seq][each_block][each_subs], blockSub[each_block][each_seq][each_subs])
            pangraph_seq[each_seq][each_block] = pangraph_seq[each_seq][each_block][:each_subs] + blockSub[each_block][each_seq][each_subs] + pangraph_seq[each_seq][each_block][each_subs + 1:]

for each_block in blockDel:
    for each_seq in blockDel[each_block]:
        for each_del in blockDel[each_block][each_seq]:
            # print(pangraph_seq[each_seq][each_block][each_subs], blockSub[each_block][each_seq][each_subs])
            pangraph_seq[each_seq][each_block] = pangraph_seq[each_seq][each_block][:each_del] + "-" + pangraph_seq[each_seq][each_block][each_del + 1:]


for each_block in blockGap:
    shift = 0
    for each_gap in blockGap[each_block]:
        each_gap_shift = shift + each_gap + 1
        for each_seq in blockIns[each_block][each_gap]:
            pangraph_seq[each_seq][each_block] = pangraph_seq[each_seq][each_block][:each_gap_shift] + "-"*(blockGap[each_block][each_gap]) + pangraph_seq[each_seq][each_block][each_gap_shift + 1:] 
            
            for each_ins in blockIns[each_block][each_gap][each_seq]:
                each_ins_shift = each_gap_shift + each_ins
                pangraph_seq[each_seq][each_block] = pangraph_seq[each_seq][each_block][:each_ins_shift] + blockIns[each_block][each_gap][each_seq][each_ins] + pangraph_seq[each_seq][each_block][each_ins_shift + 1:]

        shift +=  blockGap[each_block][each_gap]

# current = pangraph_seq[seq][block] 
# # for i in range(len(current)):
# #     if(current[i]!=previous[i]):
# #         print( i )
# print( previous + "\n")
# print( current[1348:1348+13])
# print( current )

# Accumulating final sequences
_seq = dict()

for each_seq in pangraph_seq:
    _seq[each_seq] = ""
    for each_block in pangraph_seq[each_seq]:
        _seq[each_seq] += pangraph_seq[each_seq][each_block]
    # print(len(_seq[each_seq]))


f=open("../output/ecoli_artificial.fa", "w")

for each_seq in _seq:
    f.write(">")
    f.write(each_seq+"\n")
    f.write(_seq[each_seq])
    f.write("\n")

f.close()
